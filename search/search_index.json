{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"RaBe Universal Base Image 9 Minimal","text":"<p>The RaBe Universal Base Image 9 Minimal is a stripped down image that uses microdnf for package management.</p> <p>The image is based on the AlmaLinux 9 UBI9 variant image container provided by AlmaLinux and based on the work from Red Hat.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>Based on UBI9 minimal</li> <li>Uses microdnf as a package manager</li> <li>Establishes trust with the RaBe Root CA</li> </ul>"},{"location":"#usage","title":"Usage","text":"<p>Create a downstream image from <code>ghcr.io/radiorabe/ubi9-minimal</code>. Replace <code>:latest</code> with a specific version in the example below.</p> <pre><code>FROM ghcr.io/radiorabe/ubi9-minimal:latest\n\nRUN    microdnf install -y \\\n         shadow-utils \\\n    &amp;&amp; microdnf clean all \\\n    &amp;&amp; useradd -u 1001 -r -g 0 -s /sbin/nologin \\\n         -c \"Default Application User\" default \\\n    &amp;&amp; microdnf remove -y \\\n         libsemanage \\\n         shadow-utils\n\nUSER 1001\n</code></pre> <p>Note that <code>libsemanage</code> is being removed because is was installed as a dependency of <code>shadow-utils</code>. We only need them for the <code>useradd</code> command so the safe solution is to remove both packages after use.</p>"},{"location":"#downstream-base-images","title":"Downstream Base Images","text":"<p>We provide specialised downstream images for select use cases.</p> <ul> <li>RaBe Python Base Image Minimal</li> <li>RaBe S2I Core Image Minimal</li> <li>RaBe S2I Base Image Minimal<ul> <li>RaBe S2I Python Image Minimal</li> </ul> </li> </ul>"},{"location":"#advanced-usage","title":"Advanced Usage","text":"<p>If you need packages from EPEL (like <code>cowsay</code>) your have to install an <code>epel-release</code> package first:</p> <pre><code>RUN    microdnf install -y epel-release \\\n    &amp;&amp; microdnf install -y \\\n         cowsay \\\n    &amp;&amp; microdnf clean all\n</code></pre> <p>To account for CIS-DI-0008 you may want to \"defang\" your image by running something similar to the following <code>chmod</code> after installing setuid/setgid binaries.</p> <pre><code>RUN    microdnf install -y \\\n         cowsay \\\n    &amp;&amp; microdnf clean all \\\n    &amp;&amp; chmod a-s \\\n         /usr/bin/* \\\n         /usr/sbin/* \\\n         /usr/libexec/*/*\n</code></pre>"},{"location":"#release-management","title":"Release Management","text":"<p>The CI/CD setup uses semantic commit messages following the conventional commits standard. There is a GitHub Action in .github/workflows/semantic-release.yaml that uses go-semantic-commit to create new releases.</p> <p>The commit message should be structured as follows:</p> <pre><code>&lt;type&gt;[optional scope]: &lt;description&gt;\n\n[optional body]\n\n[optional footer(s)]\n</code></pre> <p>The commit contains the following structural elements, to communicate intent to the consumers of your library:</p> <ol> <li>fix: a commit of the type <code>fix</code> patches gets released with a PATCH version bump</li> <li>feat: a commit of the type <code>feat</code> gets released as a MINOR version bump</li> <li>BREAKING CHANGE: a commit that has a footer <code>BREAKING CHANGE:</code> gets released as a MAJOR version bump</li> <li>types other than <code>fix:</code> and <code>feat:</code> are allowed and don't trigger a release</li> </ol> <p>If a commit does not contain a conventional commit style message you can fix it during the squash and merge operation on the PR.</p>"},{"location":"#build-process","title":"Build Process","text":"<p>The CI/CD setup uses the Docker build-push Action to publish container images. This is managed in .github/workflows/release.yaml.</p>"},{"location":"#license","title":"License","text":"<p>This application is free software: you can redistribute it and/or modify it under the terms of the GNU Affero General Public License as published by the Free Software Foundation, version 3 of the License.</p>"},{"location":"#copyright","title":"Copyright","text":"<p>Copyright (c) 2022 Radio Bern RaBe</p>"}]}